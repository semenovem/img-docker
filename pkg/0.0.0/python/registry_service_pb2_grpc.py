# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import registry_service_pb2 as registry__service__pb2


class RegistryStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccount = channel.unary_unary(
                '/Registry/GetAccount',
                request_serializer=registry__service__pb2.AccountRequest.SerializeToString,
                response_deserializer=registry__service__pb2.AccountReply.FromString,
                )
        self.DeleteAccount = channel.unary_unary(
                '/Registry/DeleteAccount',
                request_serializer=registry__service__pb2.AccountRequest.SerializeToString,
                response_deserializer=registry__service__pb2.AccountReply.FromString,
                )


class RegistryServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetAccount(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=registry__service__pb2.AccountRequest.FromString,
                    response_serializer=registry__service__pb2.AccountReply.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=registry__service__pb2.AccountRequest.FromString,
                    response_serializer=registry__service__pb2.AccountReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Registry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Registry(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Registry/GetAccount',
            registry__service__pb2.AccountRequest.SerializeToString,
            registry__service__pb2.AccountReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Registry/DeleteAccount',
            registry__service__pb2.AccountRequest.SerializeToString,
            registry__service__pb2.AccountReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
